apply plugin: 'com.android.application'

def config = rootProject.ext.android//配置
def librarys = rootProject.ext.dependencies//依赖
android {

    signingConfigs {
        /**签名存放到gradle.properties中  */
        signingInfo {
            /*
             keyAlias RELEASE_KEY_ALIAS
             keyPassword RELEASE_KEY_PASSWORD
             storeFile file(RELEASE_STORE_FILE)
             storePassword RELEASE_STORE_PASSWORD
             */

            /**签名存放到common.gradle中  */
            storeFile file(rootProject.ext.signConfigs.storeFile)
            storePassword rootProject.ext.signConfigs.storePassword
            keyAlias rootProject.ext.signConfigs.keyAlias
            keyPassword rootProject.ext.signConfigs.keyPassword
        }

    }
    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion
    defaultConfig {
        applicationId config.applicationId
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName
        flavorDimensions config.flavorDimensions
        buildConfigField('String', 'logTag', '"TAG"')    //打印日志输出的TAG标记名
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            debuggable false
            zipAlignEnabled true    // 开启ZipAlign优化
            shrinkResources true    //移除无用的资源文件
            signingConfig signingConfigs.signingInfo
            buildConfigField('String', 'baseUrl', '"http://httpbin.org"') //测试网络
            proguardFiles fileTree(dir: "../setting/proguard", include: ["*.pro"]).asList().toArray()
        }
        debug {
            minifyEnabled true
            debuggable true
            zipAlignEnabled true    // 开启ZipAlign优化
            shrinkResources true    //移除无用的资源文件
            buildConfigField('String', 'baseUrl', '"http://httpbin.org"') //生产网络
            signingConfig signingConfigs.signingInfo
            proguardFiles fileTree(dir: "../setting/proguard", include: ["*.pro"]).asList().toArray()

        }
    }
    dataBinding{ enabled = true }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation librarys.cardview
    implementation librarys.rxjava
    implementation librarys.rxandroid
    implementation librarys.fuel
    implementation librarys.fuelAndroid
    implementation librarys.fuelLivedata
    implementation librarys.fuelRxjava
    implementation librarys.fuelCoroutines
    implementation librarys.fuelGson
    implementation librarys.fuelJackson
    implementation librarys.fuelMoshi
    implementation librarys.fuelForge
    //implementation librarys.fuelReactor
}
